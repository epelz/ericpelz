{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/utils/render.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_bio__WEBPACK_IMPORTED_MODULE_3__","className","style","marginBottom","marginTop","rhythm","_renderIcon","react_icons_fa__WEBPACK_IMPORTED_MODULE_8__","map","_ref","node","frontmatter","fields","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","renderDateAndReadingTime","dangerouslySetInnerHTML","__html","description","excerpt","icon","url","paddingRight","href","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GithubTheme","overrideThemeStyles","h2","borderBottom","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","marginLeft","marginRight","maxWidth","padding","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultTitle","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","bioQuery","Bio","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","minWidth","borderRadius","imgStyle","_public_static_d_4120859956_json__WEBPACK_IMPORTED_MODULE_1__","post","Fragment","date","readingTime","text"],"mappings":"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","file":"component---src-pages-index-js-7823fe7b2e7b50061f1c.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\nimport { renderDateAndReadingTime } from \"../utils/render\";\nimport { FaGithubAlt, FaLinkedin, FaTwitter } from \"react-icons/fa\";\nimport \"./index.scss\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          keywords={[\n            `blog`,\n            `javascript`,\n            `typescript`,\n            `react`,\n            `simplicity`,\n            `engineering`,\n            `coding`,\n            `product`,\n          ]}\n        />\n        <Bio />\n        <h1\n          className=\"BlogIndex-iconRow\"\n          style={{\n            marginBottom: `0`,\n            marginTop: rhythm(1 / 2),\n          }}\n        >\n          {this._renderIcon(<FaGithubAlt />, \"https://www.github.com/epelz/\")}\n          {this._renderIcon(\n            <FaLinkedin />,\n            \"https://www.linkedin.com/in/epelz/\"\n          )}\n          {this._renderIcon(<FaTwitter />, \"https://twitter.com/PelzEric\")}\n        </h1>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{renderDateAndReadingTime(node)}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n\n  _renderIcon(icon, url) {\n    return (\n      <a\n        className=\"BlogIndex-socialIcon\"\n        style={{ paddingRight: rhythm(1 / 4) }}\n        href={url}\n      >\n        {icon}\n      </a>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\";\nimport GithubTheme from \"typography-theme-github\";\n\nGithubTheme.overrideThemeStyles = () => {\n  return {\n    h2: {\n      borderBottom: `none`,\n    },\n  };\n};\ndelete GithubTheme.googleFonts;\n\nconst typography = new Typography(GithubTheme);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { rhythm, scale } from \"../utils/typography\";\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h2\n          style={{\n            ...scale(1.2),\n            marginTop: 0,\n            color: `#696969`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h2>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      defaultTitle={site.siteMetadata.title}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n};\n\nexport default SEO;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nimport { rhythm } from \"../utils/typography\";\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              I'm a software engineer at{\" \"}\n              <a href=\"https://www.asana.com/\">Asana</a>. I manage a few\n              engineers and am the program & tech lead on a product team. I\n              spend a lot of time thinking about running effective teams,\n              fostering growth, product+engineering collaboration, and\n              engineering design patterns.\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/ericpelz.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from \"react\";\n\nexport function renderDateAndReadingTime(post) {\n  return (\n    <React.Fragment>\n      {post.frontmatter.date}\n      &nbsp;▪&nbsp;\n      {post.fields.readingTime.text}\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}