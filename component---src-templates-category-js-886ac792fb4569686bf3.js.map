{"version":3,"sources":["webpack://ericpelz/./src/templates/category.js"],"names":["BlogIndex","render","data","this","props","category","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","renderDateAndReadingTime","dangerouslySetInnerHTML","__html","description","excerpt","React"],"mappings":"0LAQMA,E,6FACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACAG,EAAaF,KAAKC,MAAME,YAAxBD,SACFE,EAAS,GAAML,EAAKM,KAAKC,aAAaC,MACtCC,EAAQT,EAAKU,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,gBAAC,IAAD,MACP,yCAAiBF,GACTM,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,uBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,sBACEE,MAAO,CACLC,cAAcC,QAAO,EAAI,KAG3B,gBAAC,EAAAC,KAAD,CAAMH,MAAO,CAAEI,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MACjDT,IAGL,8BAAQiB,OAAyBX,IACjC,qBACEY,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,iB,GA3BvCC,aAsCxB","file":"component---src-templates-category-js-886ac792fb4569686bf3.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport { rhythm } from \"../utils/typography\";\nimport { renderDateAndReadingTime } from \"../utils/render\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { category } = this.props.pageContext;\n    const siteTitle = `${data.site.siteMetadata.title}`;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Bio />\n\t<h3>Posts about {category}</h3>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{renderDateAndReadingTime(node)}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}